/* Generated By:JJTree: Do not edit this line. ASTAssignement.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public class ASTAssignement extends SimpleNode {
  public ASTAssignement(int id) {
    super(id);
  }

  public ASTAssignement(Javamm p, int id) {
    super(p, id);
  }

  @Override
  protected void checkNodeSemantics(SymbolTable symbol_table) {
    SimpleNode left_child = (SimpleNode) this.jjtGetChild(0);
    SimpleNode right_child = (SimpleNode) this.jjtGetChild(1);

    if(symbol_table.doesVariableExist(this.getScope(), left_child.identity))
    {
      if(!left_child.getReturnType(symbol_table).equals(right_child.getReturnType(symbol_table))){
        SemanticErrorHandler.getInstance().printError(this.getScope(),
                this + ": assign operation with different types ",
                left_child.identity + " = " + right_child.identity);
      }
      else if(!symbol_table.checkInitializationVariable(left_child.identity , this.getScope()))
      {
        symbol_table.initializeVariable(left_child.identity, this.getScope());
      };
    } else SemanticErrorHandler.getInstance().printError(this.getScope(),
            this + ": Tried to initialize undeclared variable ",
            left_child.identity );

  }

}
/* JavaCC - OriginalChecksum=236b2102da430414dc6ba7c699d0cbfb (do not edit this line) */
