
/* Generated By:JJTree: Do not edit this line. javacc.ASTLessThan.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTLessThan extends SimpleNode {
  protected final String operator = "<";

  public ASTLessThan(int id) {
    super(id);
    this.binary_operator=true;
    this.return_type="boolean";
  }

  public ASTLessThan(Javamm p, int id) {
    super(p, id);
    this.binary_operator=true;
    this.return_type="boolean";
  }

  @Override
  public String toString(){
    return "<";
  }

  @Override
  protected void checkNodeSemantics(SymbolTable symbol_table) {
    if(this.jjtGetNumChildren() == 2) {
      SimpleNode left_child = (SimpleNode) this.jjtGetChild(0);
      SimpleNode right_child = (SimpleNode) this.jjtGetChild(1);

      String code_fragment = left_child.toString() + operator + right_child.toString();

      System.out.println(code_fragment);

      checkChildConditions(left_child, "left", symbol_table, code_fragment);
      checkChildConditions(right_child, "right", symbol_table, code_fragment);
    }
  }

  private void checkChildConditions(SimpleNode node, String child, SymbolTable symbol_table, String code_fragment){
    if(!node.isBinaryOperator()){
      if(!(((node.getIdentity()=="." && node.getReturnType(symbol_table) == "int") ||
              node.getIdentity()=="ArrayAccess") ||
              node.getType() == "int" ||
              symbol_table.checkVariable(this.getScope(), node.getIdentity(), "int"))){
        printSemanticError(child, code_fragment);
      }
    }
    else if(node.getReturnType() != "int")
      printSemanticError(child, code_fragment);
  }

  private void printSemanticError(String node, String code_fragment) {
    SemanticErrorHandler.getInstance().printError(this.getScope(),
            node + " child of operator " + operator + " has to be an integer or return an integer",
            code_fragment);
  }

}
/* JavaCC - OriginalChecksum=a49d16480236596266a2592809b263e3 (do not edit this line) */
