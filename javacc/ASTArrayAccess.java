/* Generated By:JJTree: Do not edit this line. javacc.ASTArrayAccess.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTArrayAccess extends SimpleNode {
  public ASTArrayAccess(int id) {
    super(id);
    this.identity = "ArrayAccess";
    this.return_type = "int";
  }

  public ASTArrayAccess(Javamm p, int id) {
    super(p, id);
    this.identity = "ArrayAccess";
    this.return_type = "int";
  }

  @Override
  public void checkNodeSemantics(SymbolTable symbol_table) {
 /*   if(this.jjtGetNumChildren() == 2) {
      SimpleNode left_child = (SimpleNode) node.jjtGetChild(0);
      SimpleNode right_child = (SimpleNode) node.jjtGetChild(1);

      String code_fragment = left_child.toString() + operator + right_child.toString();

      if (!((child.getIdentity() == "." && child.getReturnType(symbol_table) == "int") ||
              child.getIdentity() == "ArrayAccess" ||
              child.getType() == "int" ||
              symbol_table.checkVariable(this.getScope(), child.getIdentity(), "int"))) {

        SemanticErrorHandler.getInstance().printError(this.getScope(),
                "An index must be an integer or an expression that returns an integer.");
      }
    }*/
  }
}
/* JavaCC - OriginalChecksum=bc699f3d3143c9e0cad3b348c4d37626 (do not edit this line) */
