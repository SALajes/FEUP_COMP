import java.util.ArrayList;

/* Generated By:JJTree: Do not edit this line. ASTMethod.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTMethod extends SimpleNode {
  private String methodName;
  private String returnType;

  public ASTMethod(int id) {
    super(id);
  }

  public ASTMethod(Javamm p, int id) {
    super(p, id);
  }

  public void setMethodName(String methodName) {
    this.methodName = methodName;
  }

  public void setReturnType(String returnType) {
    this.returnType = returnType;
  }

  public String toString() {
    return "Method " + methodName + " " + returnType;
  }

  @Override
  public void checkNodeSemantics(SymbolTable symbol_table){
    if(symbol_table.isInvalidMethod(this.getScope())){
      SemanticErrorHandler.getInstance().printWarning(this.scope,
              "Invalid overload (same parameters) of method " + methodName);
    }
  }
}
/* JavaCC - OriginalChecksum=959391f8f71ac4092a93282428213e76 (do not edit this line) */
